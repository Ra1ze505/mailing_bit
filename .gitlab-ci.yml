image: docker:latest
services:
  - docker:dind
variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres
  POSTGRES_HOST: postgres
stages:
  - build
  - test
  - push
  - deploy
build:
  stage: build
  only:
    - branches
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
test:
  stage: test
  only:
    - branches
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - export TEST_RUNNER_IMAGE=$CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker-compose -f docker-compose-for-tests.yml up -d
    - docker-compose -f docker-compose-for-tests.yml exec -T test-runner pytest
    - docker-compose -f docker-compose-for-tests.yml down
push:
  stage: push
  only:
    - master
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:latest
deploy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  only:
    - master
  script:
    - kubectl kustomize k8s | kubectl apply -f -
  environment:
    name: production
  when: manual
