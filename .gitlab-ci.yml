image: docker:latest
services:
  - docker:dind
variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres
  POSTGRES_HOST: postgres
stages:
  - build
  - test
  - push
  - deploy
  - push-dev
  - deploy-dev
build:
  stage: build
  only:
    - branches
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
test:lint:
  stage: test
  image: $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
  services:
    - docker:dind
  script:
    - apt install ruby-dev -y
    - pip install pre-commit
    - pre-commit install
    - pre-commit run --all-files --show-diff-on-failure
test:pytest:
  stage: test
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - export TEST_RUNNER_IMAGE=$CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker-compose -f docker-compose-for-tests.yml up -d
    - docker-compose -f docker-compose-for-tests.yml exec -T test-runner pytest
    - docker-compose -f docker-compose-for-tests.yml down
push:
  stage: push
  only:
    - master
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:latest
deploy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  only:
    - master
  script:
    - kubectl config get-contexts
    - kubectl config use-context Ra1ze505/mailing_bot:yandex-k8s
    - kubectl kustomize k8s | kubectl apply -f -
    - kubectl rollout restart deployment/bot-deployment
  environment:
    name: production
push-dev:
  stage: push-dev
  only:
    - develop
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA \
      $CONTAINER_IMAGE:dev-$CI_COMMIT_SHORT_SHA

    - docker push $CONTAINER_IMAGE:dev-$CI_COMMIT_SHORT_SHA
deploy-dev:
  stage: deploy-dev
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  only:
    - develop
  script:
    - echo "image_tag=dev-$CI_COMMIT_SHORT_SHA" > k8s-dev/image-tag-dev.env
    - kubectl config get-contexts
    - kubectl config use-context Ra1ze505/mailing_bot:yandex-k8s
    - kubectl kustomize k8s-dev | kubectl apply -f -
    - kubectl rollout restart deployment/bot-deployment-dev
  environment:
    name: develop
