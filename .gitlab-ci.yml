image: docker:latest
services:
  - docker:dind
variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres
  POSTGRES_HOST: postgres
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - docker_images/
stages:
  - build
  - test
  - push
before_script:
  - apk add --update --no-cache make git
build:
  stage: build
  only:
    - branches
  script:
    - docker build -t $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - mkdir -p docker_images
    - docker save -o docker_images/image.tar $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
test:
  stage: test
  only:
    - branches
  script:
    - docker load -i docker_images/image.tar
    - export TEST_RUNNER_IMAGE=$CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker-compose -f docker-compose-for-tests.yml up -d
    - docker-compose -f docker-compose-for-tests.yml exec -T test-runner pytest
    - docker-compose -f docker-compose-for-tests.yml down
push:
  stage: push
  only:
    - master
  script:
    - docker load -i docker_images/image.tar
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:latest
